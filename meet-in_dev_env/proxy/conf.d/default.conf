server {
  listen 80 default;
  server_name 192.168.33.12;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  server_name 192.168.33.12;
  root /var/www/html/public;
  index index.php;
  client_max_body_size 15m;

  access_log off;
  error_log off;

  ssl_certificate        /etc/nginx/certs/server.crt;
  ssl_certificate_key    /etc/nginx/certs/server.key;

  ssl on;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "ECDHE+RSAGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!EXPORT:!DES:!3DES:!MD5:!DSS";


  location / {
    try_files $uri $uri?$args $uri/ /index.php?$uri&$args /index.php?$args;
  }

  location ~ \.php$ {
    try_files $uri = 404;
    fastcgi_pass php:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME /var/www/html/public/$fastcgi_script_name;
    include fastcgi_params;
  }
}


server {
  # webphone_wsコンテナへのアクセスを中継するポート
  # 本番環境と同じ
  listen 8443;

  server_name _;

  access_log on;
  error_log off;

  ssl_certificate        /etc/nginx/certs/server.crt;
  ssl_certificate_key    /etc/nginx/certs/server.key;

  ssl on;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "ECDHE+RSAGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!EXPORT:!DES:!3DES:!MD5:!DSS";

  location = /websocket/chat/ {
    # Docker側でproxyコンテナとwebphone_wsコンテナをリンクさせること。
    # WS_CONTAINERはsedで置換する。
    proxy_pass http://{{CHAT_CONTAINER}}/;

    # nginxでwssプロトコルを利用するための記述
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location = / {
    # Docker側でproxyコンテナとwebphone_wsコンテナをリンクさせること。
    # WS_CONTAINERはsedで置換する。
    proxy_pass http://{{WS_CONTAINER}}/;

    # nginxでwssプロトコルを利用するための記述
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
